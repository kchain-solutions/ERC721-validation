@startuml 
autonumber
actor user as "User"
participant client as "Web App"
box "Onchain"
	participant validator as "Validator smart contract"
	participant nftm as "NFT Marketplace"
	participant nft as "NFT"
end box 
participant graph as "The Graph"

user -> nftm: Buying NFT
nftm -> nft: Transfering ownership
nft --> user

client -> validator: Instantiating a validator
activate client
validator --> client: Ok
deactivate client
client -> validator: Registering a NFT address calling **registerNFT**
activate client
validator --> nft
validator --> client: Ok
deactivate client

user -> client: Setting a secretKey
activate client
client -> validator: Call **setSecret** method
validator --> client: Ok 
client -> client: (*)OPT: saving secretKey
client --> user: Ok
deactivate client
group Payment
		user -> client: Payment with NFT discount  
	activate client
		client -> validator: Call **validate** method with an **userSessionId**
		validator -> nft: **balanceOf** for the user address 
		nft --> validator

		group balanceOf >=1
			validator --> graph: Emitting **validation event** (validatorId, nftAddr, userAddr, **verificationHash**, result)
		end group
		validator --> client: Ok

		client -> graph: Querying events
		graph --> client: Events with **verificationHash**
		user -> client: (*)OPT: Insert secretKey
		note right: (*)To improve security, the user should prove the knowledge of his secret Key.\nOn the other hand, to enhance the user experience, the secret key can either be omitted or saved in the session.
		client -> client: Checking if there is a new Event that match\n**verificationHash** == **HASH(UserSessionId, HASH(secretKey))**
		client  --> user: Authorizing user for discount
		user -> client: Confirm payments
		client --> user: Ok
	deactivate client
end group
@enduml